---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: integration-wb
    app.kubernetes.io/name: integration-wb
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: integration-wb
  namespace: vsaas-vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: integration-wb
      app.kubernetes.io/name: integration-wb
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: integration-wb
        app.kubernetes.io/name: integration-wb
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: integration-wb
                    app.kubernetes.io/name: integration-wb
                    app.kubernetes.io/part-of: vms
                    global-app-name: vsaas
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - php
            - artisan
            - octane:start
            - --port=80
            - --host=0.0.0.0
            - --task-workers=2
            - --max-requests=2000
          envFrom:
            - configMapRef:
                name: integration-wb-env
          image: download.aipix.ai:8443/vms-integration-wb/release:latest
          imagePullPolicy: Always
          name: integration-wb
          volumeMounts:
            - name: run-php
              mountPath: /var/run/php/
          resources:
            requests:
              cpu: 5m
              memory: 120Mi
      hostname: integration-wb
      imagePullSecrets:
        - name: download-aipix-ai
      restartPolicy: Always
      volumes:
        - name: run-php
          emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: embedded-player
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: embedded-player
  namespace: vsaas-vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: embedded-player
      app.kubernetes.io/component: frontend
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: embedded-player
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: embedded-player
                    app.kubernetes.io/component: frontend
                    app.kubernetes.io/part-of: vms
                    global-app-name: vsaas
                topologyKey: kubernetes.io/hostname
      containers:
        - name: embedded-player
          image: download.aipix.ai:8443/vms-embedded-player/release:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 80
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 80
            periodSeconds: 5
          resources:
            requests:
              cpu: 5m
              memory: 25Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: embedded-player
      restartPolicy: Always
