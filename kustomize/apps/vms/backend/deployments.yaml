---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: backend
  namespace: vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/component: backend
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: backend
                  app.kubernetes.io/component: backend
                  app.kubernetes.io/part-of: vms
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      containers:
        - name: backend
          args:
            - php 
            - artisan
            - octane:start
            - --port=8080
            - --host=0.0.0.0
            - --task-workers=2
            - --max-requests=1000
          envFrom:
            - configMapRef:
                name: vms-backend-env
          image: download.aipix.ai:8443/vms-backend/release:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: run-php
              mountPath: /var/run/php/
            - mountPath: /var/www/api/storage/oauth-private.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-private.key
            - mountPath: /var/www/api/storage/oauth-public.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-public.key
            - mountPath: /var/www/api/storage/file.key
              name: vms-backend-oauth
              readOnly: true
              subPath: file.key
          resources:
            requests:
              cpu: 5m
              memory: 120Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: backend
      restartPolicy: Always
      volumes:
        - name: run-php
          emptyDir: {}
        - name: vms-backend-oauth
          secret:
            secretName: vms-backend-oauth

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cron
    app.kubernetes.io/component: job-scheduler
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: cron
  namespace: vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cron
      app.kubernetes.io/component: job-scheduler
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cron
        app.kubernetes.io/component: job-scheduler
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      containers:
        - name: cron
          args:
            - scripts/docker/cron.sh
          envFrom:
            - configMapRef:
                name: vms-backend-env
          image: download.aipix.ai:8443/vms-backend/release:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: vms-fcm-json
              mountPath: /var/www/api/fcm.json
              subPath: fcm.json
              readOnly: true
            - name: vms-voip-p8
              mountPath: /var/www/api/voip.p8
              subPath: voip.p8
              readOnly: true
            - mountPath: /var/www/api/storage/oauth-private.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-private.key
            - mountPath: /var/www/api/storage/oauth-public.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-public.key
            - mountPath: /var/www/api/storage/file.key
              name: vms-backend-oauth
              readOnly: true
              subPath: file.key
          resources:
            requests:
              cpu: 5m
              memory: 40Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: cron
      restartPolicy: Always
      volumes:
        - name: vms-fcm-json
          configMap:
            name: vms-fcm-json
        - name: vms-voip-p8
          configMap:
            name: vms-voip-p8
        - name: vms-backend-oauth
          secret:
            secretName: vms-backend-oauth

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: schedule
    app.kubernetes.io/component: job-scheduler
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: schedule
  namespace: vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: schedule
      app.kubernetes.io/component: job-scheduler
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: schedule
        app.kubernetes.io/component: job-scheduler
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      securityContext:
        runAsUser: 33
      containers:
        - name: schedule
          args:
            - php
            - artisan
            - schedule:work
          envFrom:
            - configMapRef:
                name: vms-backend-env
          image: download.aipix.ai:8443/vms-backend/release:latest
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /var/www/api/storage/oauth-private.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-private.key
            - mountPath: /var/www/api/storage/oauth-public.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-public.key
            - mountPath: /var/www/api/storage/file.key
              name: vms-backend-oauth
              readOnly: true
              subPath: file.key
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: schedule
      restartPolicy: Always
      volumes:
        - name: vms-backend-oauth
          secret:
            secretName: vms-backend-oauth

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: queue
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: queue
  namespace: vms
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: queue
      app.kubernetes.io/component: worker
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: queue
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: queue
                  app.kubernetes.io/component: worker
                  app.kubernetes.io/part-of: vms
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
      containers:
        - name: queue
          args:
            - php
            - artisan
            - queue:work
            - --queue=vms,intercom_calls
            - --sleep=3
          envFrom:
            - configMapRef:
                name: vms-backend-env
          image: download.aipix.ai:8443/vms-backend/release:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: vms-fcm-json
              mountPath: /var/www/api/fcm.json
              subPath: fcm.json
              readOnly: true
            - name: vms-voip-p8
              mountPath: /var/www/api/voip.p8
              subPath: voip.p8
              readOnly: true
            - mountPath: /var/www/api/storage/oauth-private.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-private.key
            - mountPath: /var/www/api/storage/oauth-public.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-public.key
            - mountPath: /var/www/api/storage/file.key
              name: vms-backend-oauth
              readOnly: true
              subPath: file.key
          resources:
            requests:
              cpu: 80m
              memory: 400Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: queue
      restartPolicy: Always
      volumes:
        - name: vms-fcm-json
          configMap:
            name: vms-fcm-json
        - name: vms-voip-p8
          configMap:
            name: vms-voip-p8
        - name: vms-backend-oauth
          secret:
            secretName: vms-backend-oauth

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: archive
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: archive
  namespace: vms
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: archive
      app.kubernetes.io/component: worker
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: archive
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: archive
                  app.kubernetes.io/component: worker
                  app.kubernetes.io/part-of: vms
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
      containers:
        - name: archive
          args:
            - php
            - artisan
            - queue:work
            - --queue=archive_generation
            - --sleep=3
            - --tries=3
            - --timeout=600
          envFrom:
            - configMapRef:
                name: vms-backend-env
          image: download.aipix.ai:8443/vms-backend/release:latest
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /var/www/api/storage/oauth-private.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-private.key
            - mountPath: /var/www/api/storage/oauth-public.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-public.key
            - mountPath: /var/www/api/storage/file.key
              name: vms-backend-oauth
              readOnly: true
              subPath: file.key
          resources:
            requests:
              cpu: 5m
              memory: 150Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: archive
      restartPolicy: Always
      volumes:
        - name: vms-backend-oauth
          secret:
            secretName: vms-backend-oauth

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: reports
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: reports
  namespace: vms
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: reports
      app.kubernetes.io/component: worker
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reports
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: reports
                  app.kubernetes.io/component: worker
                  app.kubernetes.io/part-of: vms
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
      containers:
        - name: reports
          args:
            - php
            - artisan
            - queue:work
            - --queue=reports
            - --sleep=3
          envFrom:
            - configMapRef:
                name: vms-backend-env
          image: download.aipix.ai:8443/vms-backend/release:latest
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /var/www/api/storage/oauth-private.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-private.key
            - mountPath: /var/www/api/storage/oauth-public.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-public.key
            - mountPath: /var/www/api/storage/file.key
              name: vms-backend-oauth
              readOnly: true
              subPath: file.key
          resources:
            requests:
              cpu: 5m
              memory: 150Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: reports
      restartPolicy: Always
      volumes:
        - name: vms-backend-oauth
          secret:
            secretName: vms-backend-oauth

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app.kubernetes.io/name: queue-calculate-cameras
#     app.kubernetes.io/component: worker
#     app.kubernetes.io/part-of: vms
#     global-app-name: vsaas
#   name: queue-calculate-cameras
#   namespace: vms
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: queue-calculate-cameras
#       app.kubernetes.io/component: worker
#       app.kubernetes.io/part-of: vms
#       global-app-name: vsaas
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: queue-calculate-cameras
#         app.kubernetes.io/component: worker
#         app.kubernetes.io/part-of: vms
#         global-app-name: vsaas
#     spec:
#       affinity:
#         podAntiAffinity:
#           preferredDuringSchedulingIgnoredDuringExecution:
#           - weight: 100
#             podAffinityTerm:
#               labelSelector:
#                 matchLabels:
#                   app.kubernetes.io/name: queue-calculate-cameras
#                   app.kubernetes.io/component: worker
#                   app.kubernetes.io/part-of: vms
#                   global-app-name: vsaas
#               topologyKey: kubernetes.io/hostname
#       securityContext:
#         runAsUser: 33
#         runAsGroup: 33
#         fsGroup: 33
#       containers:
#         - name: queue-calculate-cameras
#           args:
#             - php
#             - /var/www/api/artisan
#             - queue:work
#             - --queue=calculate_cameras
#             - --sleep=3
#             - --tries=3
#           envFrom:
#             - configMapRef:
#                 name: vms-backend-env
#           image: download.aipix.ai:8443/vms-backend/release:latest
#           imagePullPolicy: Always
#           volumeMounts:
#             - name: vms-fcm-json
#               mountPath: /var/www/api/fcm.json
#               subPath: fcm.json
#               readOnly: true
#             - name: vms-voip-p8
#               mountPath: /var/www/api/voip.p8
#               subPath: voip.p8
#               readOnly: true
#             - mountPath: /var/www/api/storage/oauth-private.key
#               name: vms-backend-oauth
#               readOnly: true
#               subPath: oauth-private.key
#             - mountPath: /var/www/api/storage/oauth-public.key
#               name: vms-backend-oauth
#               readOnly: true
#               subPath: oauth-public.key
#             - mountPath: /var/www/api/storage/file.key
#               name: vms-backend-oauth
#               readOnly: true
#               subPath: file.key
#           resources:
#             requests:
#               cpu: 80m
#               memory: 400Mi
#       imagePullSecrets:
#         - name: download-aipix-ai
#       hostname: queue-calculate-cameras
#       restartPolicy: Always
#       volumes:
#         - name: vms-backend-oauth
#           secret:
#             secretName: vms-backend-oauth
#         - name: vms-fcm-json
#           configMap:
#             name: vms-fcm-json
#         - name: vms-voip-p8
#           configMap:
#             name: vms-voip-p8

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: vgw-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: vgw-backend
  namespace: vsaas
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: vgw-backend
      app.kubernetes.io/component: backend
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vgw-backend
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: vgw-backend
                  app.kubernetes.io/component: backend
                  app.kubernetes.io/part-of: vms
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
      containers:
        - name: vgw-backend
          args:
          - php
          - /var/www/api/artisan
          - octane:start
          - --port=8080
          - --host=0.0.0.0
          - --task-workers=2
          - --max-requests=1000
          envFrom:
            - configMapRef:
                name: vms-backend-env
          image: download.aipix.ai:8443/vms-backend/release:latest
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /var/run/php/
              name: run-php
            - mountPath: /var/www/api/storage/oauth-private.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-private.key
            - mountPath: /var/www/api/storage/oauth-public.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-public.key
            - mountPath: /var/www/api/storage/file.key
              name: vms-backend-oauth
              readOnly: true
              subPath: file.key
          resources:
            requests:
              cpu: 80m
              memory: 400Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: vgw-backend
      restartPolicy: Always
      volumes:
      - emptyDir: {}
        name: run-php
      - name: vms-backend-oauth
        secret:
          secretName: vms-backend-oauth

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: intercom-calls
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: intercom-calls
  namespace: vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: intercom-calls
      app.kubernetes.io/component: worker
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: intercom-calls
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: intercom-calls
                  app.kubernetes.io/component: worker
                  app.kubernetes.io/part-of: vms
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
      containers:
        - name: intercom-calls
          args:
            - php
            - artisan
            - queue:work
            - --queue=intercom_calls
            - --sleep=3
            - --tries=5
            - --backoff=10,30,60,300
          envFrom:
            - configMapRef:
                name: vms-backend-env
          image: download.aipix.ai:8443/vms-backend/release:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: vms-fcm-json
              mountPath: /var/www/api/fcm.json
              subPath: fcm.json
              readOnly: true
            - name: vms-voip-p8
              mountPath: /var/www/api/voip.p8
              subPath: voip.p8
              readOnly: true
            - mountPath: /var/www/api/storage/oauth-private.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-private.key
            - mountPath: /var/www/api/storage/oauth-public.key
              name: vms-backend-oauth
              readOnly: true
              subPath: oauth-public.key
            - mountPath: /var/www/api/storage/file.key
              name: vms-backend-oauth
              readOnly: true
              subPath: file.key
          resources:
            requests:
              cpu: 80m
              memory: 400Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: intercom-calls
      restartPolicy: Always
      volumes:
        - name: vms-fcm-json
          configMap:
            name: vms-fcm-json
        - name: vms-voip-p8
          configMap:
            name: vms-voip-p8
        - name: vms-backend-oauth
          secret:
            secretName: vms-backend-oauth
        