---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: portal-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: portal-backend
  namespace: vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: portal-backend
      app.kubernetes.io/component: backend
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portal-backend
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: portal-backend
                  app.kubernetes.io/component: backend
                  app.kubernetes.io/part-of: vms
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      containers:
        - name: portal-backend
          args:
            - php 
            - artisan
            - octane:start
            - --port=8080
            - --host=0.0.0.0
            - --task-workers=2
            - --max-requests=1000
          envFrom:
            - configMapRef:
                name: vms-portal-backend-env
          image: download.aipix.ai:8443/vms-portal-backend/release:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 5m
              memory: 120Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: portal-backend
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: portal-queue
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: portal-queue
  namespace: vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: portal-queue
      app.kubernetes.io/component: backend
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portal-queue
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: portal-queue
                  app.kubernetes.io/component: backend
                  app.kubernetes.io/part-of: vms
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33  
      containers:
        - name: portal-queue
          args:
            - php
            - artisan 
            - queue:work
            - --queue=portal
          envFrom:
            - configMapRef:
                name: vms-portal-backend-env
          image: download.aipix.ai:8443/vms-portal-backend/release:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 5m
              memory: 120Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: portal-queue
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: portal-scheduler
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: portal-schedule
  namespace: vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: portal-scheduler
      app.kubernetes.io/component: backend
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portal-scheduler
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
      containers:
        - name: portal-schedule
          args:
            - php
            - artisan
            - schedule:work
          envFrom:
            - configMapRef:
                name: vms-portal-backend-env
          image: download.aipix.ai:8443/vms-portal-backend/release:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 5m
              memory: 120Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: portal-schedule
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: portal-frontend-client
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: vms
    global-app-name: vsaas
  name: portal-frontend-client
  namespace: vms
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: portal-frontend-client
      app.kubernetes.io/component: frontend
      app.kubernetes.io/part-of: vms
      global-app-name: vsaas
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portal-frontend-client
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: vms
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: portal-frontend-client
                  app.kubernetes.io/component: frontend
                  app.kubernetes.io/part-of: vms
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      containers:
        - name: portal-frontend-client
          image: download.aipix.ai:8443/vms-portal-frontend-client/release:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 80
            periodSeconds: 5
          resources:
            requests:
              cpu: 5m
              memory: 25Mi
          volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            name: portal-client-nginx
            readOnly: true
            subPath: nginx.conf
          - mountPath: /etc/nginx/conf.d/default.conf
            name: portal-client-nginx
            readOnly: true
            subPath: default.conf
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: portal-frontend-client
      restartPolicy: Always
      volumes:
      - name: portal-client-nginx
        configMap:
          name: portal-client-nginx
