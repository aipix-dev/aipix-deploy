---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app.kubernetes.io/instance: traefik-traefik-v2
    app.kubernetes.io/name: traefik
  name: controller-api
  namespace: vms
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host (`example.com`) && PathPrefix(`/controller/api`)
    middlewares:
    - name: gzip-middleware
    - name: max-body-size
    services:
    - kind: Service
      name: controller-api
      port: 80
      scheme: http
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app.kubernetes.io/instance: traefik-traefik-v2
    app.kubernetes.io/name: traefik
  name: control-plane-hls
  namespace: vms
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host (`example.com`) && PathPrefix(`/controller-hls`)
    middlewares:
    - name: cors-middleware
    - name: strip-prefix-controller-hls
    services:
    - kind: Service
      name: controller-control-plane-hls
      port: 8888
      scheme: http
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  labels:
    app.kubernetes.io/instance: traefik-traefik-v2
    app.kubernetes.io/name: traefik
  name: control-plane-rtsp
  namespace: vms
spec:
  entryPoints:
  - controller-rtsp
  routes:
  - match: HostSNI(`*`)
    services:
    - name: controller-control-plane-rtsp
      port: 5554
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app.kubernetes.io/instance: traefik-traefik-v2
    app.kubernetes.io/name: traefik
  name: controller-onvif
  namespace: vms
spec:
  entryPoints:
  - contr-onvif
  routes:
  - kind: Rule
    match: HostRegexp(`^.+$`)
    middlewares:
    - name: gzip-middleware
    - name: max-body-size
    services:
    - kind: Service
      name: controller-api
      port: 80
      scheme: http