---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: controller-api
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: controller
    global-app-name: vsaas
  name: controller-api
  namespace: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller-api
      app.kubernetes.io/component: controller
      app.kubernetes.io/part-of: controller
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: controller-api
        app.kubernetes.io/component: controller
        app.kubernetes.io/part-of: controller
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: controller-api
                  app.kubernetes.io/component: controller
                  app.kubernetes.io/part-of: controller
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      initContainers:
        - name: init-backend
          command: ["/bin/sh", "-c"]
          args:
            - cp -Rp /var/www/api/public/* /mnt/public/
          image: download.aipix.ai:8443/controller/release:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: public
              mountPath: /mnt/public
      containers:
        - name: controller-api
          args:
            - /usr/sbin/php-fpm8.1 
            - --nodaemonize 
            - --fpm-config 
            - /etc/php/8.1/fpm/php-fpm.conf
          envFrom:
            - configMapRef:
                name: controller-env
          image: download.aipix.ai:8443/controller/release:latest
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sleep
                - "2"
          ports:
            - containerPort: 554
              name: http
              protocol: TCP
          volumeMounts:
            - name: run-php
              mountPath: /var/run/php/
            - name: public
              mountPath: /var/www/api/public/
          resources:
            requests:
              cpu: 5m
              memory: 120Mi
        - name: nginx
          image: nginx
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sleep
                - "2"
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          volumeMounts:
            - name: controller-nginx-conf
              readOnly: true
              mountPath: /etc/nginx/nginx.conf
              subPath: controller-nginx.conf
            - name: controller-nginx-server-conf
              readOnly: true
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: controller-nginx-server.conf
            - name: run-php
              mountPath: /var/run/php/
            - name: public
              mountPath: /var/www/api/public/
          resources:
            requests:
              cpu: 5m
              memory: 35Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: controller
      restartPolicy: Always
      volumes:
        - name: run-php
          emptyDir: {}
        - name: public
          emptyDir: {}
        - name: controller-nginx-conf
          configMap:
            name: controller-nginx-conf
        - name: controller-nginx-server-conf
          configMap:
            name: controller-nginx-server-conf

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: controller-queue
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: controller
    global-app-name: vsaas
  name: controller-queue
  namespace: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller-queue
      app.kubernetes.io/component: worker
      app.kubernetes.io/part-of: controller
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: controller-queue
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: controller
        global-app-name: vsaas
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: controller-queue
                  app.kubernetes.io/component: worker
                  app.kubernetes.io/part-of: controller
                  global-app-name: vsaas
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 33
        runAsGroup: 33
        fsGroup: 33
      containers:
        - name: controller-queue
          args:
            - php
            - artisan 
            - queue:work
            - --queue=controller
            - --sleep=3
            - --tries=3
          envFrom:
            - configMapRef:
                name: controller-env
          image: download.aipix.ai:8443/controller/release:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 80m
              memory: 400Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: controller-queue
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: controller-schedule
    app.kubernetes.io/component: job-scheduler
    app.kubernetes.io/part-of: controller
    global-app-name: vsaas
  name: controller-schedule
  namespace: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller-schedule
      app.kubernetes.io/component: job-scheduler
      app.kubernetes.io/part-of: controller
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: controller-schedule
        app.kubernetes.io/component: job-scheduler
        app.kubernetes.io/part-of: controller
        global-app-name: vsaas
    spec:
      securityContext:
        runAsUser: 33
      containers:
        - name: controller-schedule
          args:
            - php
            - artisan
            - schedule:work
          envFrom:
            - configMapRef:
                name: controller-env
          image: download.aipix.ai:8443/controller/release:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 50m
              memory: 150Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: controller-schedule
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: controller-control-plane-hls
    app.kubernetes.io/component: controller-control-plane-hls
    app.kubernetes.io/part-of: controller
    global-app-name: vsaas
  name: controller-control-plane-hls
  namespace: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller-control-plane-hls
      app.kubernetes.io/component: controller-control-plane-hls
      app.kubernetes.io/part-of: controller
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: controller-control-plane-hls
        app.kubernetes.io/component: controller-control-plane-hls
        app.kubernetes.io/part-of: controller
        global-app-name: vsaas
    spec:
      securityContext:
        runAsUser: 33
      containers:
        - name: controller-control-plane-hls
          args:
            - php
            - artisan
            - control-plain:redirect
            - --protocol=http
            - --port=8888
            - --host=0.0.0.0
          envFrom:
            - configMapRef:
                name: controller-env
          image: download.aipix.ai:8443/controller/release:latest
          ports:
            - containerPort: 8888
              name: hls
              protocol: TCP
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 50m
              memory: 150Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: controller-control-plane-hls
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: controller-control-plane-rtsp
    app.kubernetes.io/component: controller-control-plane-rtsp
    app.kubernetes.io/part-of: controller
    global-app-name: vsaas
  name: controller-control-plane-rtsp
  namespace: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller-control-plane-rtsp
      app.kubernetes.io/component: controller-control-plane-rtsp
      app.kubernetes.io/part-of: controller
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: controller-control-plane-rtsp
        app.kubernetes.io/component: controller-control-plane-rtsp
        app.kubernetes.io/part-of: controller
        global-app-name: vsaas
    spec:
      securityContext:
        runAsUser: 33
      containers:
        - name: controller-control-plane-rtsp
          args:
            - php
            - artisan
            - control-plain:redirect
            - --protocol=rtsp
            - --port=5554
            - --host=0.0.0.0
          envFrom:
            - configMapRef:
                name: controller-env
          image: download.aipix.ai:8443/controller/release:latest
          ports:
            - containerPort: 5554
              name: rtsp
              protocol: TCP
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 50m
              memory: 150Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: controller-control-plane-rtsp
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: controller-media-servers-callback-queue
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: controller
    global-app-name: vsaas
  name: controller-media-servers-callback-queue
  namespace: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller-media-servers-callback-queue
      app.kubernetes.io/component: worker
      app.kubernetes.io/part-of: controller
      global-app-name: vsaas
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: controller-media-servers-callback-queue
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: controller
        global-app-name: vsaas
    spec:
      securityContext:
        runAsUser: 33
      containers:
        - name: controller-media-servers-callback-queue
          args:
            - php
            - artisan 
            - queue:work 
            - --queue=media_servers_callback 
            - --sleep=3 
            - --tries=3
          envFrom:
            - configMapRef:
                name: controller-env
          image: download.aipix.ai:8443/controller/release:latest
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 50m
              memory: 250Mi
      imagePullSecrets:
        - name: download-aipix-ai
      hostname: controller-media-servers-callback-queue
      restartPolicy: Always
