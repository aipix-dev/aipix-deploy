deployment:
  replicas: 1

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

additionalArguments:
  - --providers.kubernetesingress.labelselector=app.kubernetes.io/instance=traefik-traefik-v2
  - --providers.kubernetescrd.labelselector=app.kubernetes.io/instance=traefik-traefik-v2
  - --providers.kubernetescrd.allowexternalnameservices=true
  - --accesslog=true
  - --log.level=DEBUG
#  - --accesslog.format=json
  - --accesslog.fields.headers.defaultmode=keep
  - --serversTransport.insecureSkipVerify=true
  - --entrypoints.controller-rtsp.address=:5554/tcp
  - --entrypoints.contr-onvif.address=:8080/tcp
  - --entryPoints.web.http.redirections.entryPoint.to=websecure
  - --entrypoints.web.http.redirections.entrypoint.scheme=https
  - --entrypoints.web.http.redirections.entrypoint.priority=100

ingressRoute:
  dashboard:
    enabled: true
    entryPoints: ["traefik", "websecure"]
    matchRule: Host(`${TRAEFIK_DOMAIN}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))
    tls:
      secretName: certificate

ports:
  controller-rtsp:
    port: 5554
    protocol: TCP
    expose:
      default: true
    exposedPort: 5554
  contr-onvif:
    port: 8080
    protocol: TCP
    expose:
      default: true
    exposedPort: 8080

service:
  spec:
    sessionAffinity: ClientIP
    externalTrafficPolicy: Local

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: '{{ template "traefik.name" . }}'
            app.kubernetes.io/instance: '{{ .Release.Name }}-{{ .Release.Namespace }}'
        topologyKey: kubernetes.io/hostname
